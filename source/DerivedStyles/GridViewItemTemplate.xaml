<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                    xmlns:p="clr-namespace:Playnite;assembly=Playnite"
                    mc:Ignorable="d">

    <Style x:Key="GridViewItemTemplate" TargetType="{x:Type GameListItem}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GameListItem}">
                    <Border BorderThickness="{Settings GridItemMargin}" BorderBrush="{DynamicResource ButtonBackgroundBrush}"
                            CornerRadius="{DynamicResource GridViewCoverCornerRadius}" >
                        <StackPanel Name="PART_PanelHost"
                                    d:DataContext="{x:Static DesignMainViewModel.DesignSelectedGameIntance}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <TextBlock x:Name="DropShadowVisibilityProxy"
                                           Visibility="Collapsed"
                                           Tag="{DynamicResource GridViewCoverDisplayDropShadowEffect}" />
                                <Border Style="{DynamicResource DropShadowBorderStyle}"
                                        Visibility="{Binding ElementName=DropShadowVisibilityProxy, Path=Tag, Converter={StaticResource BooleanToVisibilityConverter}}"
                                        Tag="{DynamicResource GridViewCoverUseRoundedCorners}" />
                                
                                <Grid Width="{Settings GridItemWidth}" Grid.Row="0">
                                    <Grid.Style>
                                        <Style TargetType="Grid">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding ElementName=Mask, Path=Tag}" Value="True">
                                                    <Setter Property="OpacityMask">
                                                        <Setter.Value>
                                                            <VisualBrush Visual="{Binding ElementName=Mask}"/>
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Grid.Style>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>

                                    <Border Grid.RowSpan="2" Name="Mask" Background="{DynamicResource GridViewItemMaskBackgroundBrush}"
                                            Tag="{DynamicResource GridViewCoverUseRoundedCorners}"
                                            Visibility="{Binding RelativeSource={RelativeSource Self}, Path=Tag, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}"
                                            BorderThickness="0">
                                        <Border.Style>
                                            <Style TargetType="Border">
                                                <Setter Property="CornerRadius" Value="{DynamicResource GridViewCoverCornerRadius}" />
                                                <Style.Triggers>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Settings ShowGridItemBackground}" Value="True" />
                                                            <Condition Binding="{Settings ShowNamesUnderCovers}" Value="True" />
                                                            <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="CornerRadius" Value="{DynamicResource GridViewCoverGridBackgroundDisabledCornerRadius}" />
                                                    </MultiDataTrigger>
                                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="False">
                                                        <Setter Property="CornerRadius" Value="0,0,0,0" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Border.Style>
                                    </Border>

                                    <ContentControl x:Name="ThemeExtras_Banner"
                                                    RenderOptions.BitmapScalingMode="Fant"
                                                    Width="{Binding Width, ElementName=PART_ImageCover}"
                                                    Tag="{DynamicResource GridViewCoverDisplayLibraryBanner}"
                                                    Grid.Row="0" VerticalAlignment="Top" HorizontalAlignment="Center"
                                                    Visibility="{Binding Tag, RelativeSource={RelativeSource Self}, Converter={StaticResource BooleanToVisibilityConverter}}"/>

                                    <Image Name="PART_ImageCover" Grid.Row="1" Height="{Settings GridItemHeight}"
                                           RenderOptions.BitmapScalingMode="Fant" StretchDirection="Both"
                                           HorizontalAlignment="Center" VerticalAlignment="Top"
                                           Stretch="{Settings CoverArtStretch}" />

                                    <Grid Grid.RowSpan="2">
                                        <Border Background="#99000000" x:Name="TextGameName" Visibility="Collapsed">
                                            <TextBlock Text="{Binding DisplayName}"
                                                       TextWrapping="Wrap" Margin="5"
                                                       Style="{StaticResource BaseTextBlockStyle}"
                                                       TextTrimming="CharacterEllipsis" TextAlignment="Center"
                                                       HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                        </Border>
                                        <Border Background="#AA000000" x:Name="BorderMouseOver" Visibility="Collapsed" />
                                        <Border x:Name="GlowPlayingBorder" Visibility="Collapsed" Tag="False"
                                                Style="{DynamicResource CoverIsPlayingAnimatedBackground}" />
                                        <TextBlock Name="EnablePlayingGlowBorder" Visibility="Collapsed"
                                                   Tag="{DynamicResource GridViewEnablePlayingGlowBorder}" />
                                        <Border Name="ShineBackground" Tag="False" IsHitTestVisible="False"
                                                Style="{DynamicResource AnimatedCoverShineBackground}" />
                                        <TextBlock Name="EnableHighlightAnimation" Visibility="Collapsed"
                                                   Tag="{DynamicResource GridViewEnableCoverShineAnimation}" />
                                    </Grid>

                                    <Grid Grid.Row="1" Height="{Settings GridItemHeight}">
                                        <Border Background="{DynamicResource CoversButtonsBrush}" x:Name="BorderDarkFade" Visibility="Collapsed" />
                                        <DockPanel HorizontalAlignment="Right" VerticalAlignment="Top" Margin="5">
                                            <TextBlock Text="&#xF000;" Foreground="{DynamicResource GlyphBrush}"
                                                        Opacity="0.95" FontSize="16"
                                                        Margin="3,0,0,0"
                                                        VerticalAlignment="Center"
                                                        DockPanel.Dock="Right"
                                                        FontFamily="{DynamicResource FontIcoFont}"
                                                        Tag="{DynamicResource GridViewLibraryGameShowFavorite}">
                                                <TextBlock.Style>
                                                    <Style TargetType="TextBlock" >
                                                        <Setter Property="Visibility" Value="Collapsed" />
                                                        <Style.Triggers>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding Favorite}" Value="True" />
                                                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="True" />
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Visibility" Value="Visible" />
                                                            </MultiDataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                            <Border DockPanel.Dock="Right" CornerRadius="8" Background="{DynamicResource OpaqueGrayHighlightBrush}">
                                                <ContentControl x:Name="DuplicateHider_SourceSelector1" RenderOptions.BitmapScalingMode="Fant" Visibility="Visible" MaxHeight="25"/>
                                            </Border>
                                        </DockPanel>
                                        <Viewbox VerticalAlignment="Bottom" HorizontalAlignment="Center"
                                                    Name="GameControls"  Visibility="Collapsed">
                                            <StackPanel Orientation="Horizontal">
                                                <Button Name="PART_ButtonPlay" Style="{StaticResource SimpleButton}"
                                                        Margin="20,0,2,5" VerticalAlignment="Center"
                                                        Content="&#xec74;" FontFamily="{StaticResource FontIcoFont}" />
                                                <Button Name="PART_ButtonInfo" Style="{StaticResource SimpleButton}"
                                                        Margin="2,0,20,5" VerticalAlignment="Center"
                                                        Content="&#xef4f;" FontFamily="{StaticResource FontIcoFont}" />
                                            </StackPanel>
                                        </Viewbox>
                                    </Grid>
                                </Grid>
                                <Border x:Name="ShowGameNameBorder" Background="Transparent" Grid.Row="1">
                                    <Border.Style>
                                        <Style TargetType="Border">
                                            <Setter Property="CornerRadius" Value="0" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding ElementName=Mask, Path=Tag}" Value="True">
                                                    <Setter Property="CornerRadius" Value="{DynamicResource GridViewShowGameNameCornerRadius}" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                    <TextBlock x:Name="ShowGameName" Text="{Binding DisplayName}"
                                               Style="{StaticResource BaseTextBlockStyle}"    
                                               Foreground="White"
                                               TextAlignment="Left" TextTrimming="CharacterEllipsis"
                                               FontWeight="SemiBold"
                                               VerticalAlignment="Center"
                                               Width="{Settings GridItemWidth}"
                                               Padding="2,8,2,3"
                                               Visibility="{Settings ShowNamesUnderCovers}" />
                                </Border>
                            </Grid>

                            <DockPanel Width="{Settings GridItemWidth}" Visibility="{DynamicResource GridViewCoverSubtitleVisibility}">
                                <TextBlock Text="&#xEEDC;" FontSize="{DynamicResource FontSizeSmall}"
                                           FontFamily="{StaticResource FontIcoFont}"
                                           TextAlignment="Left" VerticalAlignment="Center"
                                           Padding="2,4,2,5" Margin="0,0,0,-2"
                                           Foreground="{DynamicResource GridViewCoverSubtitleBrush}" />
                                <TextBlock Text="{Binding Playtime, Mode=OneWay, Converter={StaticResource PlayTimeToStringConverter}, IsAsync=True}"
                                           Foreground="{DynamicResource GridViewCoverSubtitleBrush}"
                                           FontSize="{DynamicResource FontSizeSmall}"
                                           Style="{DynamicResource BaseTextBlockStyle}"                                                                   
                                           TextAlignment="Left" TextTrimming="CharacterEllipsis"
                                           VerticalAlignment="Center"
                                           Padding="3,4,2,2" />
                            </DockPanel>
                            <DockPanel Width="{Settings GridItemWidth}" Visibility="{DynamicResource GridViewCoverCompStatusSubtitleVisibility}">
                                <TextBlock Text="&#xEC74;" FontSize="{DynamicResource FontSizeSmall}"
                                           FontFamily="{StaticResource FontIcoFont}"
                                           TextAlignment="Left" VerticalAlignment="Center"
                                           Padding="2,4,2,5" Margin="0,0,0,-2"
                                           Foreground="{DynamicResource GridViewCoverSubtitleBrush}" />
                                <TextBlock Text="{Binding CompletionStatus.Name, Mode=OneWay, IsAsync=True}"
                                           ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=Text}"
                                           Foreground="{DynamicResource GridViewCoverSubtitleBrush}"
                                           FontSize="{DynamicResource FontSizeSmall}"
                                           Style="{DynamicResource BaseTextBlockStyle}"
                                           TextAlignment="Left" TextTrimming="CharacterEllipsis"
                                           VerticalAlignment="Center"
                                           Padding="3,4,2,2" />
                            </DockPanel>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ElementName=EnableHighlightAnimation, Path=Tag}" Value="True" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Tag" Value="True" TargetName="ShineBackground" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsVisible}" Value="True" />
                                <Condition Binding="{Binding Source={x:Static p:PlayniteApplication.Current}, Path=IsActive}" Value="True" />
                                <Condition Binding="{Binding ElementName=EnablePlayingGlowBorder, Path=Tag}" Value="True" />
                                <Condition Binding="{Binding IsRunning}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Tag" Value="True" TargetName="GlowPlayingBorder" />
                            <Setter Property="Visibility" Value="Visible" TargetName="GlowPlayingBorder" />
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Settings ShowGridItemBackground}" Value="True">
                            <Setter Property="Padding" Value="2,5,2,5" TargetName="ShowGameName" />
                            <Setter Property="TextAlignment" Value="Center" TargetName="ShowGameName" />
                            <Setter Property="Background" Value="{DynamicResource GridViewCoverSelectionBrush}" TargetName="ShowGameNameBorder" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsInstalled}" Value="False">
                            <Setter Property="Content" Value="&#xef08;" TargetName="PART_ButtonPlay" />
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsInstalled}" Value="False" />
                                <Condition Binding="{Settings DarkenUninstalledGamesGrid}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Visibility" Value="Visible" TargetName="BorderMouseOver" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding CoverImage}" Value="{x:Null}" />
                                <Condition Binding="{Settings ShowNameEmptyCover}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Visibility" Value="Visible" TargetName="TextGameName"/>
                        </MultiDataTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Visibility" Value="Visible" TargetName="BorderDarkFade"/>
                            <Setter Property="Visibility" Value="Visible" TargetName="GameControls"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CoverIsPlayingAnimatedBackground" TargetType="Border">
        <Style.Resources>
            <Color x:Key="BackgroundColor1">#26ffffff</Color>
            <Color x:Key="BackgroundColor2">#00000000</Color>
            <Color x:Key="BackgroundColor3">#99000000</Color>
        </Style.Resources>
        <Setter Property="Background" x:Name="AnimatedBackground">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource BackgroundColor2}" />
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="True">
                <DataTrigger.EnterActions>
                    <BeginStoryboard x:Name="Animation">
                        <Storyboard Timeline.DesiredFrameRate="20">
                            <ColorAnimationUsingKeyFrames
                                    Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)"
                                    FillBehavior="HoldEnd"
                                    AutoReverse="True" RepeatBehavior="Forever">
                                <ColorAnimationUsingKeyFrames.KeyFrames>
                                    <LinearColorKeyFrame Value="{StaticResource BackgroundColor1}" KeyTime="00:00:00.00" />
                                    <LinearColorKeyFrame Value="{StaticResource BackgroundColor1}" KeyTime="00:00:00.10" />
                                    <LinearColorKeyFrame Value="{StaticResource BackgroundColor2}" KeyTime="00:00:00.80" />
                                    <LinearColorKeyFrame Value="{StaticResource BackgroundColor3}" KeyTime="00:00:01.50" />
                                    <LinearColorKeyFrame Value="{StaticResource BackgroundColor3}" KeyTime="00:00:01.55" />
                                </ColorAnimationUsingKeyFrames.KeyFrames>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <RemoveStoryboard BeginStoryboardName="Animation"/>
                </DataTrigger.ExitActions>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="AnimatedCoverShineBackground" TargetType="Border">
        <Setter Property="Opacity" Value="0.00" />
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="1.0, 0.0" EndPoint="0.07, 1.0">
                    <GradientStop Color="#00d2d2d2" Offset="-0.10" />
                    <GradientStop Color="#59d2d2d2" Offset="0.18"/>
                    <GradientStop Color="#59d2d2d2" Offset="0.22" />
                    <GradientStop Color="Transparent" Offset="0.25" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="True">
                <DataTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard Timeline.DesiredFrameRate="20">
                            <DoubleAnimation
                                    Storyboard.TargetProperty="Opacity"
                                    To="0.90"
                                    Duration="0:0:0.5">
                                <DoubleAnimation.EasingFunction>
                                    <CubicEase EasingMode="EaseOut"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <DoubleAnimation
                                    Storyboard.TargetProperty="Background.(GradientBrush.GradientStops)[1].(GradientStop.Offset)"
                                    To="0.35"
                                    Duration="0:0:0.5">
                                <DoubleAnimation.EasingFunction>
                                    <CubicEase EasingMode="EaseOut"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <DoubleAnimation
                                    Storyboard.TargetProperty="Background.(GradientBrush.GradientStops)[2].(GradientStop.Offset)"
                                    To="0.40"
                                    Duration="0:0:0.5">
                                <DoubleAnimation.EasingFunction>
                                    <CubicEase EasingMode="EaseOut"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <DoubleAnimation
                                    Storyboard.TargetProperty="Background.(GradientBrush.GradientStops)[3].(GradientStop.Offset)"
                                    To="0.48"
                                    Duration="0:0:0.5">
                                <DoubleAnimation.EasingFunction>
                                    <CubicEase EasingMode="EaseOut"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                    Storyboard.TargetProperty="Opacity"
                                    To="0.00"
                                    Duration="0:0:0.4">
                                <DoubleAnimation.EasingFunction>
                                    <CubicEase EasingMode="EaseOut"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <DoubleAnimation
                                    Storyboard.TargetProperty="Background.(GradientBrush.GradientStops)[1].(GradientStop.Offset)"
                                    To="0.18"
                                    Duration="0:0:0.4">
                                <DoubleAnimation.EasingFunction>
                                    <CubicEase EasingMode="EaseOut"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <DoubleAnimation
                                    Storyboard.TargetProperty="Background.(GradientBrush.GradientStops)[2].(GradientStop.Offset)"
                                    To="0.22"
                                    Duration="0:0:0.4">
                                <DoubleAnimation.EasingFunction>
                                    <CubicEase EasingMode="EaseOut"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <DoubleAnimation
                                    Storyboard.TargetProperty="Background.(GradientBrush.GradientStops)[3].(GradientStop.Offset)"
                                    To="0.25"
                                    Duration="0:0:0.4">
                                <DoubleAnimation.EasingFunction>
                                    <CubicEase EasingMode="EaseOut"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.ExitActions>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    
    <Style
        x:Key="DuplicateHider_IconContentControlStyle1"
        BasedOn="{StaticResource {x:Type ContentControl}}"
        TargetType="ContentControl">
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="Foreground" Value="{x:Null}" />
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="Padding" Value="0,0,0,0" />
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="BorderThickness" Value="0,0,0,0" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="ClipToBounds" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <Border x:Name="IconBackground" CornerRadius="8" Background="{DynamicResource OpaqueGrayHighlightBrush}" Opacity="0.0" Visibility="Hidden">
                        </Border>
                        <Image Source="{Binding Icon}" RenderOptions.BitmapScalingMode="Fant" Margin="3" Opacity="0.95"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Border.Visibility" Value="Visible" TargetName="IconBackground"/>
                            <Setter Property="Border.Background" Value="{DynamicResource OpaqueGrayHighlightBrush}" TargetName="IconBackground"/>
                            <Setter Property="Border.Opacity" Value="0.75" TargetName="IconBackground"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding IsCurrent}" Value="True">
                            <Setter Property="Border.Visibility" Value="Visible" TargetName="IconBackground"/>
                            <Setter Property="Border.Background" Value="{DynamicResource OpaqueGrayHighlightBrush}" TargetName="IconBackground" />
                            <Setter Property="Border.Opacity" Value="1" TargetName="IconBackground"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Border" x:Key="DropShadowBorderStyle">
        <Setter Property="BorderBrush" Value="{DynamicResource GridViewItemMaskBackgroundBrush}" />
        <Setter Property="BorderThickness" Value="8" />
        <Setter Property="CornerRadius" Value="{DynamicResource GridViewCoverCornerRadius}" />
        <Setter Property="Grid.RowSpan" Value="1" />
        <Setter Property="CacheMode">
            <Setter.Value>
                <BitmapCache EnableClearType="False"
                             RenderAtScale="1"
                             SnapsToDevicePixels="False" />
            </Setter.Value>
        </Setter>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect RenderingBias="Performance"
                                  ShadowDepth="5" BlurRadius="8" Direction="270"
                                  Color="#000000" Opacity="0.5" />
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Settings ShowGridItemBackground}" Value="True" />
                    <Condition Binding="{Settings ShowNamesUnderCovers}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Grid.RowSpan" Value="2" />
            </MultiDataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="False">
                <Setter Property="CornerRadius" Value="0,0,0,0" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    
</ResourceDictionary>